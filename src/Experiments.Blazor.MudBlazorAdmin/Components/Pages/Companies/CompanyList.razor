@page "/companies"

<PageTitle>Companies</PageTitle>
<SectionContent SectionName="header">
    Companies
</SectionContent>

    <MudTable Items="Companies" Striped="true" Hover="true" Filter="Filter">
    <ToolBarContent>
        <MudTextField @bind-Value="searchFilter" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Company, object>(c => c.Symbol)">Symbol</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Company, object>(c => c.Security)">Security</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Company, object>(c => c.Sector)">Sector</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Company, object>(c => c.SubIndustry)">Sub-industry</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Company, object>(c => c.CentralIndexKey)"><MudTooltip Text="Central Index Number">CIK</MudTooltip></MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Symbol"><MudLink Href="@context.DetailsUrl">@context.Symbol</MudLink></MudTd>
            <MudTd DataLabel="Security"><MudLink Href="@context.DetailsUrl">@context.Security</MudLink></MudTd>
        <MudTd DataLabel="Sector">@context.Sector</MudTd>
        <MudTd DataLabel="Sub-industry">@context.SubIndustry</MudTd>
        <MudTd DataLabel="Central Index Number">@context.CentralIndexKey</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>
@code {
    private string searchFilter = string.Empty;

    public IReadOnlyCollection<Company> Companies { get; set; } = Array.Empty<Company>();

    protected override void OnInitialized()
    {
        Companies = CompanyDataSet.GetAll();
    }

    private bool Filter(Company company)
    {
        return string.IsNullOrWhiteSpace(searchFilter)
            || company.Symbol.Contains(searchFilter, StringComparison.OrdinalIgnoreCase)
            || company.Security.Contains(searchFilter, StringComparison.OrdinalIgnoreCase)
            || company.CentralIndexKey.Contains(searchFilter, StringComparison.OrdinalIgnoreCase);
    }
}
